{"version":3,"sources":["comps/YtdCalc.js","comps/ThreeMonthAvgCalc.js","comps/HourlyCalc.js","comps/HourlyData.js","comps/YtdData.js","comps/OverTimeData.js","comps/PayChangeData.js","comps/CommisionData.js","comps/ShiftDiffData.js","App.js","serviceWorker.js","index.js"],"names":["YTDCalc","props","getDays","date1","ytdStart","date2","ytdEnd","Math","round","perDay","ytdPay","toFixed","getYearToDateCalc","align","Paper","style","margin","padding","background","Grid","container","direction","item","xs","Typography","showYtdCalc","ThreeMonthAvgCalc","checksForAverage","checksPerYear","weekly","biWeekly","monthly","semiMonthly","yearly","payCheckSum","getPayCheckAvg","payFreq","checks","grossPayChecks","map","check","index","parseFloat","avgPayCheck","showThreeMonthAvg","commisionsPerYear","getWeeks","days","weeks","first","abs","HourlyCalc","currentWage","hoursPerWeek","weeklyWage","weeksPerYear","payChange","moveInDate","payChangeDate","annualWage","payChangeRate","payChangeDays","payChangeWeeks","payChangeWeekly","payChangeTotal","overTime","overTimeRate","avgOverTimeHours","weeklyOt","annualOt","shiftDiff","shiftDiffRate","shiftDiffHours","shiftDiffWeekly","shiftDiffTotal","commision","commisionRate","commisionFreq","commisionTotal","grandTotal","console","log","showWeeksCalc","showPayChangeCalc","showOverTimeCalc","showShiftDiffCalc","showCommisionCalc","WageInfo","setCurentWage","setHoursPerWeek","setPayFreq","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","id","label","type","value","onChange","e","target","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","color","labelPlacement","YtdData","setYtdPay","setYtdStart","setYtdEnd","utils","DateFnsUtils","disableToolbar","format","Date","OverTimeData","setOverTimeRate","setAvgOverTimeHours","setOverTime","md","Switch","checked","name","PayChangeData","setPayChange","setPayChangeRate","setPayChangeDate","setMoveInDate","usingPayChange","CommisionData","setCommisionRate","setCommisionFreq","setCommision","aria-label","usingCommision","ShiftDiffData","setShiftDiffRate","setShiftDiffHours","setShiftDiff","usingShiftDiff","wageTypes","Data","useState","getFullYear","wageType","Array","fill","setGrossPayChecks","Container","maxWidth","justify","spacing","key","Input","evt","slice","newValue","updatePayChecksNeeded","sm","lg","App","ThemeProvider","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a5da33d8.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { Paper, Typography, Grid } from \"@material-ui/core\";\r\n\r\nfunction YTDCalc(props) {\r\n  const getDays = () => {\r\n    const date1 = props.ytdStart;\r\n    const date2 = props.ytdEnd;\r\n    return Math.round((date2 - date1) / (1000 * 3600 * 24));\r\n  };\r\n  const perDay = (props.ytdPay / getDays()).toFixed(2);\r\n\r\n  const getYearToDateCalc = () => {\r\n    return ((props.ytdPay / getDays()) * 365).toFixed(2);\r\n  };\r\n\r\n  function showYtdCalc() {\r\n    if (getYearToDateCalc() > 0)\r\n      return (\r\n        <Fragment>\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>YTD</Grid>\r\n                <Grid item>Days</Grid>\r\n                <Grid item>Per Day</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{props.ytdPay} &divide;</Typography>\r\n                  <Typography>{getDays()} =</Typography>\r\n                  <Typography>{perDay} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <hr />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Per Day</Grid>\r\n                <Grid item>Days Annualy</Grid>\r\n                <Grid item>Annual Total</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{perDay} *</Typography>\r\n                  <Typography>365 =</Typography>\r\n                  <Typography>{getYearToDateCalc()} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 align=\"center\">YTD From VOE</h3>\r\n      <h4 align=\"center\">Total days for YTD is {getDays()}</h4>\r\n      <Paper\r\n        style={{\r\n          margin: \"0 18%\",\r\n          padding: \"10px\",\r\n          background: \"#fffde7\"\r\n        }}\r\n      >\r\n        {showYtdCalc()}\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default YTDCalc;\r\n","import React, { Fragment } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nfunction ThreeMonthAvgCalc(props) {\r\n  const checksForAverage = props.checksForAverage;\r\n  const checksPerYear = {\r\n    weekly: 52,\r\n    biWeekly: 36,\r\n    monthly: 12,\r\n    semiMonthly: 24,\r\n    yearly: 1\r\n  };\r\n\r\n  let payCheckSum = 0;\r\n\r\n  function getPayCheckAvg() {\r\n    return (\r\n      (payCheckSum / checksForAverage[props.payFreq]) *\r\n      checksPerYear[props.payFreq]\r\n    ).toFixed(2);\r\n  }\r\n\r\n  const showThreeMonthAvg = () => {\r\n    const checks = props.grossPayChecks.map((check, index) => {\r\n      if (index >= props.checksForAverage[props.payFreq]) return;\r\n      else {\r\n        payCheckSum += parseFloat(check);\r\n        return (\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Check#{index + 1}</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{parseFloat(check).toFixed(2)} +</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      }\r\n    });\r\n\r\n    const avgPayCheck = payCheckSum / checksForAverage[props.payFreq];\r\n\r\n    if (getPayCheckAvg() > 0)\r\n      return (\r\n        <Fragment>\r\n          {checks}\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Checks Sum</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{payCheckSum.toFixed(2)} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <hr />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Check Sum</Grid>\r\n                <Grid item># of Checks</Grid>\r\n                <Grid item>Check Avg</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{payCheckSum.toFixed(2)} &divide;</Typography>\r\n                  <Typography>{checksForAverage[props.payFreq]} =</Typography>\r\n                  <Typography>{avgPayCheck.toFixed(2)} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <hr />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Check Avg</Grid>\r\n                <Grid item>Checks per Yr.</Grid>\r\n                <Grid item>Annual Total</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{avgPayCheck.toFixed(2)} x</Typography>\r\n                  <Typography>{checksPerYear[props.payFreq]} =</Typography>\r\n                  <Typography>{getPayCheckAvg()} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h3 align=\"center\">3 Month Average</h3>\r\n      <h4 align=\"center\">\r\n        There are {checksForAverage[props.payFreq]} checks needed for the\r\n        average.{\" \"}\r\n      </h4>\r\n      <Paper\r\n        style={{\r\n          margin: \"0 20%\",\r\n          padding: \"10px\",\r\n          background: \"#fffde7\"\r\n        }}\r\n      >\r\n        {showThreeMonthAvg()}\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ThreeMonthAvgCalc;\r\n","import React, { Fragment } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst commisionsPerYear = {\r\n  weekly: 52,\r\n  biWeekly: 36,\r\n  monthly: 12,\r\n  semiMonthly: 24,\r\n  yearly: 1\r\n};\r\n\r\nfunction getDays(date1, date2) {\r\n  return Math.round((date2 - date1) / (1000 * 3600 * 24));\r\n}\r\n\r\nfunction getWeeks(days, weeks) {\r\n  const first = (days / 7).toFixed(2);\r\n  const last = Math.abs(first - weeks);\r\n  return [first, last];\r\n}\r\n\r\nfunction HourlyCalc(props) {\r\n  // -- Hourly Variables -- //\r\n  const currentWage = props.currentWage\r\n    ? parseFloat(props.currentWage).toFixed(2)\r\n    : \"0.00\";\r\n  const hoursPerWeek = props.hoursPerWeek ? props.hoursPerWeek : 0;\r\n  const weeklyWage = (currentWage * hoursPerWeek).toFixed(2);\r\n  const weeksPerYear = props.payChange\r\n    ? getWeeks(getDays(props.moveInDate, props.payChangeDate).toFixed(2), 52)[0]\r\n    : props.weeksPerYear;\r\n  const annualWage = (weeklyWage * weeksPerYear).toFixed(2);\r\n  // -- Pay Change Variables -- //\r\n  const payChange = props.payChange;\r\n  const payChangeRate = props.payChangeRate;\r\n  const payChangeDate = props.payChangeDate;\r\n  const moveInDate = props.moveInDate;\r\n  const payChangeDays = getDays(moveInDate, payChangeDate).toFixed(2);\r\n  const payChangeWeeks = getWeeks(payChangeDays, 52);\r\n  const payChangeWeekly = (payChangeRate * hoursPerWeek).toFixed(2);\r\n  const payChangeTotal = (payChangeWeekly * payChangeWeeks[1]).toFixed(2);\r\n  // -- OT Variables -- //\r\n  const overTime = props.overTime;\r\n  const overTimeRate = props.overTimeRate;\r\n  const avgOverTimeHours = props.avgOverTimeHours;\r\n  const weeklyOt = (overTimeRate * avgOverTimeHours).toFixed(2);\r\n  const annualOt = (weeklyOt * 52).toFixed(2);\r\n  // -- Shift Diff Variables -- //\r\n  const shiftDiff = props.shiftDiff;\r\n  const shiftDiffRate = props.shiftDiffRate;\r\n  const shiftDiffHours = props.shiftDiffHours;\r\n  const shiftDiffWeekly = (shiftDiffRate * shiftDiffHours).toFixed(2);\r\n  const shiftDiffTotal = (shiftDiffWeekly * 52).toFixed(2);\r\n  // -- Commision Variables -- //\r\n  const commision = props.commision;\r\n  const commisionRate = props.commisionRate;\r\n  const commisionFreq = props.commisionFreq;\r\n  const commisionTotal = (\r\n    commisionRate * commisionsPerYear[commisionFreq]\r\n  ).toFixed(2);\r\n\r\n  let grandTotal = 0;\r\n\r\n  function showWeeksCalc() {\r\n    if (payChange)\r\n      return (\r\n        <Fragment>\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Days</Grid>\r\n                <Grid item>1 Week</Grid>\r\n                <Grid item>Wks Current pay</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{payChangeDays} &divide;</Typography>\r\n                  <Typography>{7} =</Typography>\r\n                  <Typography>{payChangeWeeks[0]} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Wks Current</Grid>\r\n                <Grid item>1 year</Grid>\r\n                <Grid item>Wks New Pay</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{payChangeWeeks[0]} +</Typography>\r\n                  <Typography>{52} -</Typography>\r\n                  <Typography>{payChangeWeeks[1]} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <hr />\r\n        </Fragment>\r\n      );\r\n  }\r\n\r\n  function showHourlyCalc() {\r\n    if (annualWage > 0) grandTotal += parseFloat(annualWage);\r\n    return (\r\n      <Fragment>\r\n        <Grid container direction=\"row\">\r\n          <Grid item xs={7}>\r\n            <Grid container direction=\"column\" align=\"left\">\r\n              <Grid item>Wage</Grid>\r\n              <Grid item>Hours</Grid>\r\n              <Grid item>Weekly</Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Grid container direction=\"column\" align=\"right\">\r\n              <Grid item>\r\n                <Typography>{currentWage} x</Typography>\r\n                <Typography>{hoursPerWeek} =</Typography>\r\n                <Typography>{weeklyWage} *</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <Grid container direction=\"row\">\r\n          <Grid item xs={7}>\r\n            <Grid container direction=\"column\" align=\"left\">\r\n              <Grid item>Weekly</Grid>\r\n              <Grid item>Weeks per Yr.</Grid>\r\n              <Grid item>Annual Hourly</Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Grid container direction=\"column\" align=\"right\">\r\n              <Grid item>\r\n                <Typography>{weeklyWage} x</Typography>\r\n                <Typography>{weeksPerYear} =</Typography>\r\n                <Typography>{annualWage} *</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  function showPayChangeCalc() {\r\n    if (payChange) {\r\n      grandTotal += parseFloat(payChangeTotal);\r\n      return (\r\n        <Fragment>\r\n          <hr />\r\n          <Fragment>\r\n            <Grid container direction=\"row\">\r\n              <Grid item xs={7}>\r\n                <Grid container direction=\"column\" align=\"left\">\r\n                  <Grid item>Pay Change</Grid>\r\n                  <Grid item>Hrs per Week</Grid>\r\n                  <Grid item>Weekly</Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <Grid container direction=\"column\" align=\"right\">\r\n                  <Grid item>\r\n                    <Typography>{payChangeRate} x</Typography>\r\n                    <Typography>{hoursPerWeek} =</Typography>\r\n                    <Typography>{payChangeWeekly} *</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container direction=\"row\">\r\n              <Grid item xs={7}>\r\n                <Grid container direction=\"column\" align=\"left\">\r\n                  <Grid item>Weekly</Grid>\r\n                  <Grid item>Weeks per Yr.</Grid>\r\n                  <Grid item>Total pay</Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <Grid container direction=\"column\" align=\"right\">\r\n                  <Grid item>\r\n                    <Typography>{payChangeWeekly} x</Typography>\r\n                    <Typography>{payChangeWeeks[1]} =</Typography>\r\n                    <Typography>{payChangeTotal} *</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Fragment>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  function showOverTimeCalc() {\r\n    if (overTime) {\r\n      grandTotal += parseFloat(annualOt);\r\n      return (\r\n        <Fragment>\r\n          <hr />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>OT Rate</Grid>\r\n                <Grid item>OT Hours</Grid>\r\n                <Grid item>OT Weekly</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{overTimeRate} x</Typography>\r\n                  <Typography>{avgOverTimeHours} =</Typography>\r\n                  <Typography>{weeklyOt} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>OT Weekly</Grid>\r\n                <Grid item>Weeks per Year</Grid>\r\n                <Grid item>OT Total</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{weeklyOt} x</Typography>\r\n                  <Typography>{52} =</Typography>\r\n                  <Typography>{annualOt} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  function showShiftDiffCalc() {\r\n    if (shiftDiff) {\r\n      grandTotal += parseFloat(shiftDiffTotal);\r\n      return (\r\n        <Fragment>\r\n          <hr />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>ShiftDiff Rate</Grid>\r\n                <Grid item>ShiftDiff Hours</Grid>\r\n                <Grid item>Per Week</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{shiftDiffRate} x</Typography>\r\n                  <Typography>{shiftDiffHours} =</Typography>\r\n                  <Typography>{shiftDiffWeekly} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>per Week</Grid>\r\n                <Grid item>Weeks per Year</Grid>\r\n                <Grid item>ShiftDiff Total</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{shiftDiffWeekly} x</Typography>\r\n                  <Typography>{52} =</Typography>\r\n                  <Typography>{shiftDiffTotal} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  function showCommisionCalc() {\r\n    if (commision) {\r\n      grandTotal += parseFloat(commisionTotal);\r\n      return (\r\n        <Fragment>\r\n          <hr />\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={7}>\r\n              <Grid container direction=\"column\" align=\"left\">\r\n                <Grid item>Commision</Grid>\r\n                <Grid item>Times per Year</Grid>\r\n                <Grid item>Total</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Grid container direction=\"column\" align=\"right\">\r\n                <Grid item>\r\n                  <Typography>{commisionRate} x</Typography>\r\n                  <Typography>{commisionsPerYear[commisionFreq]} =</Typography>\r\n                  <Typography>{commisionTotal} *</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  function showTotal() {\r\n    if (true) {\r\n      return (\r\n        <Fragment>\r\n          <hr />\r\n          <Typography>{annualWage} +</Typography>\r\n          {payChange ? <Typography>{payChangeTotal} +</Typography> : null}\r\n          {overTime ? <Typography>{annualOt} +</Typography> : null}\r\n          {shiftDiff ? <Typography>{shiftDiffTotal} +</Typography> : null}\r\n          {commision ? <Typography>{commisionTotal} +</Typography> : null}\r\n          {payChange || overTime || shiftDiff || commision ? (\r\n            <Typography>{grandTotal.toFixed(2)} *</Typography>\r\n          ) : null}\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  console.log(commision);\r\n  return (\r\n    <Fragment>\r\n      <h3 align=\"center\">Hourly Calculations</h3>\r\n      <h4 align=\"center\">\r\n        ${currentWage} per hour - {hoursPerWeek} hours per week\r\n      </h4>\r\n      <Paper\r\n        align=\"right\"\r\n        style={{\r\n          margin: \"0 18%\",\r\n          padding: \"10px\",\r\n          background: \"#fffde7\"\r\n        }}\r\n      >\r\n        {showWeeksCalc()}\r\n        {showHourlyCalc()}\r\n        {showPayChangeCalc()}\r\n        {showOverTimeCalc()}\r\n        {showShiftDiffCalc()}\r\n        {showCommisionCalc()}\r\n        {showTotal()}\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default HourlyCalc;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\n\r\nfunction WageInfo(props) {\r\n  const currentWage = props.currentWage;\r\n  const setCurentWage = props.setCurentWage;\r\n  const hoursPerWeek = props.hoursPerWeek;\r\n  const setHoursPerWeek = props.setHoursPerWeek;\r\n  const payFreq = props.payFreq;\r\n  const setPayFreq = props.setPayFreq;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel htmlFor=\"current-wages\">Current Wage</InputLabel>\r\n          <OutlinedInput\r\n            id=\"current-wages\"\r\n            label=\"Current Wages\"\r\n            type=\"text\"\r\n            value={currentWage}\r\n            onChange={e => setCurentWage(e.target.value)}\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel>Average Hours Per Week</InputLabel>\r\n          <OutlinedInput\r\n            label=\"Average Hours per Week\"\r\n            type=\"text\"\r\n            value={hoursPerWeek}\r\n            onChange={e => setHoursPerWeek(e.target.value)}\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl>\r\n          <FormLabel align=\"center\">Pay Frequency</FormLabel>\r\n          <RadioGroup\r\n            value={payFreq}\r\n            onChange={e => setPayFreq(e.target.value)}\r\n            row\r\n          >\r\n            <FormControlLabel\r\n              value=\"weekly\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Weekly\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"biWeekly\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Bi-Weekly\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"semiMonthly\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Semi-Monthly\"\r\n              labelPlacement=\"end\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"monthly\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Monthly\"\r\n              labelPlacement=\"end\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default WageInfo;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nfunction YtdData(props) {\r\n  const ytdPay = props.ytdPay;\r\n  const setYtdPay = props.setYtdPay;\r\n  const ytdStart = props.ytdStart;\r\n  const setYtdStart = props.setYtdStart;\r\n  const ytdEnd = props.ytdEnd;\r\n  const setYtdEnd = props.setYtdEnd;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel htmlFor=\"grossYtdPay\">Gross Year to Date Pay</InputLabel>\r\n          <OutlinedInput\r\n            id=\"grossYtdPay\"\r\n            label=\"Gross Year to Date Pay\"\r\n            type=\"text\"\r\n            value={ytdPay}\r\n            onChange={e => setYtdPay(e.target.value)}\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              variant=\"inline\"\r\n              format=\"MM/dd/yyyy\"\r\n              margin=\"normal\"\r\n              label=\"Year to Date Start\"\r\n              value={ytdStart}\r\n              onChange={e => setYtdStart(new Date(e))}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              variant=\"inline\"\r\n              format=\"MM/dd/yyyy\"\r\n              margin=\"normal\"\r\n              label=\"Year to Date End\"\r\n              value={ytdEnd}\r\n              onChange={e => setYtdEnd(e)}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </FormControl>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default YtdData;\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Switch,\r\n  InputLabel,\r\n  OutlinedInput\r\n} from \"@material-ui/core\";\r\n\r\nfunction OverTimeData(props) {\r\n  const overTimeRate = props.overTimeRate;\r\n  const setOverTimeRate = props.setOverTimeRate;\r\n  const avgOverTimeHours = props.avgOverTimeHours;\r\n  const setAvgOverTimeHours = props.setAvgOverTimeHours;\r\n  const overTime = props.overTime;\r\n  const setOverTime = props.setOverTime;\r\n\r\n  function usingOverTime() {\r\n    if (overTime) {\r\n      return (\r\n        <Fragment>\r\n          <Grid item>\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel htmlFor=\"otRate\">Overtime Rate</InputLabel>\r\n              <OutlinedInput\r\n                id=\"otRate\"\r\n                label=\"Overtime Rate\"\r\n                type=\"text\"\r\n                value={overTimeRate}\r\n                onChange={e => setOverTimeRate(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel htmlFor=\"avg-ot\">Avg OT Hours Per Week</InputLabel>\r\n              <OutlinedInput\r\n                id=\"avg-ot\"\r\n                label=\"Avg OT Hours Per Week\"\r\n                type=\"text\"\r\n                value={avgOverTimeHours}\r\n                onChange={e => setAvgOverTimeHours(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Grid item></Grid>\r\n          <Grid item></Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item md={3}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={overTime}\r\n              onChange={e => {\r\n                setOverTime(e.target.checked);\r\n              }}\r\n              name=\"overTimeSwitch\"\r\n              color=\"secondary\"\r\n            />\r\n          }\r\n          label=\"Over Time\"\r\n        />\r\n      </Grid>\r\n      {usingOverTime()}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default OverTimeData;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  Switch,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nfunction PayChangeData(props) {\r\n  const payChange = props.payChange;\r\n  const setPayChange = props.setPayChange;\r\n  const payChangeRate = props.payChangeRate;\r\n  const setPayChangeRate = props.setPayChangeRate;\r\n  const payChangeDate = props.payChangeDate;\r\n  const setPayChangeDate = props.setPayChangeDate;\r\n  const moveInDate = props.moveInDate;\r\n  const setMoveInDate = props.setMoveInDate;\r\n\r\n  function usingPayChange() {\r\n    if (payChange) {\r\n      return (\r\n        <Fragment>\r\n          <Grid item>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel htmlFor=\"payRateChange\">\r\n                Anticipated Pay Change\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"payRateChange\"\r\n                label=\"Anticipated Pay Change\"\r\n                type=\"text\"\r\n                value={payChangeRate}\r\n                onChange={e => setPayChangeRate(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                label=\"Move In / Recert Date\"\r\n                value={moveInDate}\r\n                onChange={e => setMoveInDate(e)}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                label=\"New Pay Rate Effective\"\r\n                value={payChangeDate}\r\n                onChange={e => setPayChangeDate(e)}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item md={3}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={payChange}\r\n              onChange={e => {\r\n                setPayChange(e.target.checked);\r\n              }}\r\n              name=\"overTimeSwitch\"\r\n              color=\"secondary\"\r\n            />\r\n          }\r\n          label=\"Anticipated Pay Change\"\r\n        />\r\n      </Grid>\r\n      {usingPayChange()}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PayChangeData;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Switch,\r\n  InputLabel,\r\n  OutlinedInput\r\n} from \"@material-ui/core\";\r\n\r\nfunction CommisionData(props) {\r\n  const commisionRate = props.commisionRate;\r\n  const setCommisionRate = props.setCommisionRate;\r\n  const commisionFreq = props.commisionFreq;\r\n  const setCommisionFreq = props.setCommisionFreq;\r\n  const commision = props.commision;\r\n  const setCommision = props.setCommision;\r\n\r\n  function usingCommision() {\r\n    if (commision) {\r\n      return (\r\n        <Fragment>\r\n          <Grid item>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel htmlFor=\"Commision-bonus\">\r\n                Commision, Bonus, Tips\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"Commision-bonus\"\r\n                label=\"Commision, Bonus, Tips\"\r\n                type=\"text\"\r\n                value={commisionRate}\r\n                onChange={e => setCommisionRate(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl>\r\n              <FormLabel align=\"center\">\r\n                Commision, bonus, Tips Frequency\r\n              </FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"position\"\r\n                name=\"position\"\r\n                value={commisionFreq}\r\n                onChange={e => setCommisionFreq(e.target.value)}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"weekly\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Weekly\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"biWeekly\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Bi-Weekly\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"monthly\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Monthly\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"semiMonthly\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Semi-Monthly\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item md={3}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={commision}\r\n              onChange={e => {\r\n                setCommision(e.target.checked);\r\n              }}\r\n              name=\"overTimeSwitch\"\r\n              color=\"secondary\"\r\n            />\r\n          }\r\n          label=\"Commision, Bonus, Tips\"\r\n        />\r\n      </Grid>\r\n      {usingCommision()}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CommisionData;\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Switch,\r\n  InputLabel,\r\n  OutlinedInput\r\n} from \"@material-ui/core\";\r\n\r\nfunction ShiftDiffData(props) {\r\n  const shiftDiffRate = props.shiftDiffRate;\r\n  const setShiftDiffRate = props.setShiftDiffRate;\r\n  const shiftDiffHours = props.shiftDiffHours;\r\n  const setShiftDiffHours = props.setShiftDiffHours;\r\n  const shiftDiff = props.shiftDiff;\r\n  const setShiftDiff = props.setShiftDiff;\r\n\r\n  function usingShiftDiff() {\r\n    if (shiftDiff) {\r\n      return (\r\n        <Fragment>\r\n          <Grid item>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel htmlFor=\"shiftDiffRate\">\r\n                Shift Differential Rate\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"shiftDiffRate\"\r\n                label=\"Shift Differential Rate\"\r\n                type=\"text\"\r\n                value={shiftDiffRate}\r\n                onChange={e => setShiftDiffRate(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel htmlFor=\"shiftDiffHours\">\r\n                Shift Diff Hours Per Week\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"shiftDiffHours\"\r\n                label=\"Shift Diff Hours Per Week\"\r\n                type=\"text\"\r\n                value={shiftDiffHours}\r\n                onChange={e => setShiftDiffHours(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item md={3}>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={shiftDiff}\r\n              onChange={e => {\r\n                setShiftDiff(e.target.checked);\r\n              }}\r\n              name=\"overTimeSwitch\"\r\n              color=\"secondary\"\r\n            />\r\n          }\r\n          label=\"Shift Differential\"\r\n        />\r\n      </Grid>\r\n      {usingShiftDiff()}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ShiftDiffData;\r\n","import React, { useState } from \"react\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { Grid, Container, InputLabel, Input, Paper } from \"@material-ui/core\";\n\nimport YTDCalc from \"./comps/YtdCalc\";\nimport ThreeMonthAvgCalc from \"./comps/ThreeMonthAvgCalc\";\nimport HourlyCalc from \"./comps/HourlyCalc\";\nimport WageInfo from \"./comps/HourlyData\";\nimport YtdData from \"./comps/YtdData\";\nimport OverTimeData from \"./comps/OverTimeData\";\nimport PayChangeData from \"./comps/PayChangeData\";\nimport CommisionCalc from \"./comps/CommisionData\";\nimport ShiftDiffData from \"./comps/ShiftDiffData\";\n\nconst checksForAverage = {\n  weekly: 13,\n  biWeekly: 7,\n  monthly: 3,\n  semiMonthly: 6,\n  yearly: 1\n};\n\nconst wageTypes = {\n  hourly: \"hourly\",\n  salary: \"salary\"\n};\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <div className=\"App\">\n        <h1 align=\"center\">Estimated Annual Income Calculator</h1>\n        <Data />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nfunction Data() {\n  const [moveInDate, setMoveInDate] = useState(\n    new Date(new Date().getFullYear(), 0, 1)\n  );\n  const [currentWage, setCurentWage] = useState(14.0);\n  const [hoursPerWeek, setHoursPerWeek] = useState(40);\n  const [wageType, setWageType] = useState(wageTypes.hourly);\n  const [payFreq, setPayFreq] = useState(\"monthly\");\n  const [ytdPay, setYtdPay] = useState(31231.0);\n  const [ytdStart, setYtdStart] = useState(\n    new Date(new Date().getFullYear(), 0, 1)\n  );\n  const [ytdEnd, setYtdEnd] = useState(new Date());\n  const [overTimeRate, setOverTimeRate] = useState(16.0);\n  const [avgOverTimeHours, setAvgOverTimeHours] = useState(6);\n  const [overTime, setOverTime] = useState(false);\n  const [shiftDiff, setShiftDiff] = useState(false);\n  const [shiftDiffRate, setShiftDiffRate] = useState(15.0);\n  const [shiftDiffHours, setShiftDiffHours] = useState(6);\n  const [commision, setCommision] = useState(false);\n  const [commisionRate, setCommisionRate] = useState(100.0);\n  const [commisionFreq, setCommisionFreq] = useState(\"weekly\");\n\n  const [payChange, setPayChange] = useState(false);\n  const [payChangeRate, setPayChangeRate] = useState(14.5);\n  const [payChangeDate, setPayChangeDate] = useState(\n    new Date(new Date().getFullYear(), 0, 1)\n  );\n  const [seasonalDays, setSeasonalDays] = useState();\n  const [grossPayChecks, setGrossPayChecks] = useState(Array(13).fill(0));\n\n  const updatePayChecksNeeded = (evt, index) => {\n    const checks = grossPayChecks.slice();\n    const newValue =\n      evt.target.value || checks[index] == 0 ? evt.target.value : 0;\n    checks[index] = newValue;\n    console.log(\"Check[index] \" + checks[index]);\n    setGrossPayChecks(checks);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <h1 align=\"center\">\n        Current Wage is ${currentWage} paid {wageType}. Paydays are {payFreq}\n      </h1>\n\n      {/* // Wage Data Input // */}\n\n      <Grid container justify=\"center\" spacing={6}>\n        <WageInfo\n          currentWage={currentWage}\n          setCurentWage={setCurentWage}\n          hoursPerWeek={hoursPerWeek}\n          setHoursPerWeek={setHoursPerWeek}\n          payFreq={payFreq}\n          setPayFreq={setPayFreq}\n        />\n      </Grid>\n\n      {/* // YTD Data Input  */}\n\n      <Grid container justify=\"center\" spacing={6}>\n        <YtdData\n          ytdPay={ytdPay}\n          setYtdPay={setYtdPay}\n          ytdStart={ytdStart}\n          setYtdStart={setYtdStart}\n          ytdEnd={ytdEnd}\n          setYtdEnd={setYtdEnd}\n        />\n      </Grid>\n\n      {/* --  OverTime Data Input -- */}\n\n      <Grid container spacing={6}>\n        <OverTimeData\n          overTimeRate={overTimeRate}\n          setOverTimeRate={setOverTimeRate}\n          avgOverTimeHours={avgOverTimeHours}\n          setAvgOverTimeHours={setAvgOverTimeHours}\n          overTime={overTime}\n          setOverTime={setOverTime}\n        />\n      </Grid>\n\n      {/* --  Shift Diff Data Input -- */}\n\n      <Grid container spacing={6}>\n        <ShiftDiffData\n          shiftDiff={shiftDiff}\n          setShiftDiff={setShiftDiff}\n          shiftDiffRate={shiftDiffRate}\n          setShiftDiffRate={setShiftDiffRate}\n          shiftDiffHours={shiftDiffHours}\n          setShiftDiffHours={setShiftDiffHours}\n        />\n      </Grid>\n\n      {/* -- Commision Data Input -- */}\n\n      <Grid container spacing={6}>\n        <CommisionCalc\n          commision={commision}\n          setCommision={setCommision}\n          commisionRate={commisionRate}\n          setCommisionRate={setCommisionRate}\n          commisionFreq={commisionFreq}\n          setCommisionFreq={setCommisionFreq}\n        />\n      </Grid>\n\n      {/* -- Pay Change Input -- */}\n\n      <Grid container spacing={6}>\n        <PayChangeData\n          payChange={payChange}\n          setPayChange={setPayChange}\n          payChangeRate={payChangeRate}\n          setPayChangeRate={setPayChangeRate}\n          payChangeDate={payChangeDate}\n          setPayChangeDate={setPayChangeDate}\n          moveInDate={moveInDate}\n          setMoveInDate={setMoveInDate}\n        />\n      </Grid>\n      <hr />\n\n      {/* -- Pay Stub Data -- */}\n\n      <Grid container justify=\"center\" spacing={6}>\n        {grossPayChecks.map((check, index) => {\n          if (index >= checksForAverage[payFreq]) {\n            return;\n          }\n          return (\n            <Grid item key={index}>\n              <Paper style={{ padding: \"20px\", background: \"#efe\" }}>\n                <InputLabel>\n                  <span>Paycheck #{index + 1}: </span>\n                  <Input\n                    type=\"text\"\n                    value={grossPayChecks[index]}\n                    onChange={e => updatePayChecksNeeded(e, index)}\n                  />\n                </InputLabel>\n              </Paper>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <br />\n      <hr />\n      <Grid container spacing={3}>\n        {/*  --  YTD Calc  --  */}\n\n        <Grid item xs={12} sm={6} lg={4}>\n          <YTDCalc ytdStart={ytdStart} ytdEnd={ytdEnd} ytdPay={ytdPay} />\n        </Grid>\n\n        {/*  --  Three Month Average Calc --  */}\n\n        <Grid item xs={12} sm={6} lg={4}>\n          <ThreeMonthAvgCalc\n            payFreq={payFreq}\n            grossPayChecks={grossPayChecks}\n            checksForAverage={checksForAverage}\n          />\n        </Grid>\n\n        {/*  --  Hourly Calc  -- */}\n\n        <Grid item xs={12} sm={6} lg={4}>\n          <HourlyCalc\n            currentWage={currentWage}\n            hoursPerWeek={hoursPerWeek}\n            wageType={wageType}\n            weeksPerYear={52}\n            overTime={overTime}\n            overTimeRate={overTimeRate}\n            avgOverTimeHours={avgOverTimeHours}\n            commision={commision}\n            commisionRate={commisionRate}\n            commisionFreq={commisionFreq}\n            shiftDiff={shiftDiff}\n            shiftDiffRate={shiftDiffRate}\n            shiftDiffHours={shiftDiffHours}\n            payChange={payChange}\n            payChangeRate={payChangeRate}\n            payChangeDate={payChangeDate}\n            moveInDate={moveInDate}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}